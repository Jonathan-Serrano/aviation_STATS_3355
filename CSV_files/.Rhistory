dest_states<- sort(dest_states) # Sort City names
sum_of_delay_times_states <- (1:50 * 0) # Set all sums to 0
names(sum_of_delay_times_states) <- dest_states # name sum vector
for (x in 1:nrow(no_zeros_delays)) { # Loop through DF
name <- no_zeros_delays[x,"DEST_STATE_NM"] # Get Name of city
sum_of_delay_times_states[name] <- sum_of_delay_times_states[name] + no_zeros_delays[x,"DEP_DELAY_NEW"] # Add to sum
}
# Average delay time
avg_of_delay_times_states <- sum_of_delay_times_states / table(no_zeros_delays$DEST_STATE_NM)
# Round Delay time
avg_of_delay_times_states <- round(avg_of_delay_times_states, digits = 2)
# Plot of Average delay time in top 5 cities
ggplot(data = head(arrange(as.data.frame(avg_of_delay_times_states), desc(Freq))), aes(x = reorder(Var1, -Freq), y= Freq)) +
geom_bar(stat="identity", fill="Steelblue") +
geom_text(aes(label=Freq), vjust=2.0, color="black", size=10) +
xlab("State") +
ylab("Average Delay Time (mins)") +
ggtitle("Top 5 States with highest Average Delay Times") +
theme(text = element_text(size = 20), plot.title = element_text(hjust = 0.5))
# -Question 8b--------------------------------------------- ----------------------
#median_of_delay_times_states <- c()
#for (x in dest_states)
#{
#  median_of_delay_times_states <- c(median_of_delay_times_states, median(tx_flights$DEP_DELAY_NEW[which(x == tx_flights$DEST_STATE_NM & tx_flights$DEP_DELAY_NEW > 0)]))
#}
#names(median_of_delay_times_states) <- dest_states
#-Question 2a and b--------------------------------------------------------------------
June2018 <- (tx_flights$DEST_STATE_NM == "Texas" & tx_flights$CANCELLED == 1 & tx_flights$YEAR == 2018  & tx_flights$MONTH == 6)
July2018 <- (tx_flights$DEST_STATE_NM == "Texas" & tx_flights$CANCELLED == 1 & tx_flights$YEAR == 2018  & tx_flights$MONTH == 7)
June2019 <- (tx_flights$DEST_STATE_NM == "Texas" & tx_flights$CANCELLED == 1 & tx_flights$YEAR == 2019  & tx_flights$MONTH == 6)
July2019 <- (tx_flights$DEST_STATE_NM == "Texas" & tx_flights$CANCELLED == 1 & tx_flights$YEAR == 2019  & tx_flights$MONTH == 7)
June2020 <- (tx_flights$DEST_STATE_NM == "Texas" & tx_flights$CANCELLED == 1 & tx_flights$YEAR == 2020  & tx_flights$MONTH == 6)
July2020 <- (tx_flights$DEST_STATE_NM == "Texas" & tx_flights$CANCELLED == 1 & tx_flights$YEAR == 2020  & tx_flights$MONTH == 7)
June2021 <- (tx_flights$DEST_STATE_NM == "Texas" & tx_flights$CANCELLED == 1 & tx_flights$YEAR == 2021  & tx_flights$MONTH == 6)
July2021 <- (tx_flights$DEST_STATE_NM == "Texas" & tx_flights$CANCELLED == 1 & tx_flights$YEAR == 2021  & tx_flights$MONTH == 7)
June2022 <- (tx_flights$DEST_STATE_NM == "Texas" & tx_flights$CANCELLED == 1 & tx_flights$YEAR == 2022  & tx_flights$MONTH == 6)
July2022 <- (tx_flights$DEST_STATE_NM == "Texas" & tx_flights$CANCELLED == 1 & tx_flights$YEAR == 2022  & tx_flights$MONTH == 7)
# All Cancellations to Texas Cities
ggplot(data = subset(tx_flights, CANCELLED == 1 & DEST_STATE_NM == "Texas"), aes(x=YEAR, fill=factor(MONTH))) +
geom_bar(stat='count', position='dodge') +
labs(title = "Cancellations of Domestic Flights to Texas", x = "Year", y = "Number of Cancellations") +
scale_fill_manual(name = "Month", labels = c("June", "July"), values= c("steelblue", "salmon")) +
theme(plot.title = element_text(hjust = 0.5), text = element_text(size = 20))
# All Delays to Texas Cities
ggplot(data = subset(tx_flights, DEP_DELAY > 0 & DEST_STATE_NM == "Texas"), aes(x=YEAR, fill=factor(MONTH))) +
geom_bar(stat='count', position='dodge') +
labs(title = "Delays of Domestic Flights to Texas", x = "Year", y = "Number of Delays") +
scale_fill_manual(name = "Month", labels = c("June", "July"), values= c("steelblue", "salmon")) +
theme(plot.title = element_text(hjust = 0.5), text = element_text(size = 20))
# All Cancellations from Texas Cities to Everywhere else in USA
ggplot(data = subset(tx_flights, CANCELLED == 1 & DEST_STATE_NM != "Texas"), aes(x=YEAR, fill=factor(MONTH))) +
geom_bar(stat='count', position='dodge') +
labs(title = "Cancellations of Domestic Flights from Texas", x = "Year", y = "Number of Cancellations") +
scale_fill_manual(name = "Month", labels = c("June", "July"), values= c("steelblue", "salmon")) +
theme(plot.title = element_text(hjust = 0.5), text = element_text(size = 20))
# All Delays from Texas Cities to Everywhere else in USA
ggplot(data = subset(tx_flights, DEP_DELAY > 0 & DEST_STATE_NM != "Texas"), aes(x=YEAR, fill=factor(MONTH))) +
geom_bar(stat='count', position='dodge') +
labs(title = "Delays of Domestic Flights from Texas", x = "Year", y = "Number of Delays") +
scale_fill_manual(name = "Month", labels = c("June", "July"), values= c("steelblue", "salmon")) +
theme(plot.title = element_text(hjust = 0.5), text = element_text(size = 20))
#-Question 8a--------------------------------------------------------------------
median_of_delay_times_cities <- c()
for (x in dest_cities)
{
median_of_delay_times_cities <- c(median_of_delay_times_cities, median(tx_flights$DEP_DELAY_NEW[which(x == tx_flights$DEST_CITY_NAME & tx_flights$DEP_DELAY_NEW > 0)]))
}
names(median_of_delay_times_cities) <- dest_cities
#- Question 6 JUSTIFICATION (Question 7)--------------------------------------------------------------------
sort(table(no_zeros_delays$OP_UNIQUE_CARRIER), decreasing = TRUE)
top_10_airlines <- names(sort(table(no_zeros_delays$OP_UNIQUE_CARRIER), decreasing = TRUE)[1:10])
df_top_10_airlines <- no_zeros_delays[which(no_zeros_delays$OP_UNIQUE_CARRIER %in% top_10_airlines), ]
ggplot(df_top_10_airlines, aes(x = as.factor(OP_UNIQUE_CARRIER), y = DEP_DELAY_NEW, fill = as.factor(OP_UNIQUE_CARRIER))) +
geom_boxplot(outlier.shape = NA) +
labs(title = "Delay Time per Top 10 Airlines",
x = "Unique Carrier",
y = "Delay Time in Minutes") +
ylim(0, 40) +
theme_economist() +
scale_fill_manual(values = c("steelblue1", "steelblue2", "steelblue3", "steelblue4", "lightblue1", "lightblue2","lightblue3", "lightblue4", "cadetblue3", "cadetblue4"),
name = "Airlines",
labels = c("American Airlines","Delta Air Lines", "ExpressJet Airlines","Frontier Airlines", "Envoy Air",
"Spirit Air Lines", "SkyWest Airlines","United Air Lines", "Southwest Airlines", "Mesa Airlines")) +
theme(plot.title = element_text(hjust = 0.5), text = element_text(size = 20))
source("~/Desktop/aviation_STATS_3355/test.R", echo=TRUE)
sort(table(no_zeros_delays$OP_UNIQUE_CARRIER), decreasing = TRUE)
top_10_airlines <- names(sort(table(no_zeros_delays$OP_UNIQUE_CARRIER), decreasing = TRUE)[1:10])
df_top_10_airlines <- no_zeros_delays[which(no_zeros_delays$OP_UNIQUE_CARRIER %in% top_10_airlines), ]
ggplot(df_top_10_airlines, aes(x = as.factor(OP_UNIQUE_CARRIER), y = DEP_DELAY_NEW, fill = as.factor(OP_UNIQUE_CARRIER))) +
geom_boxplot(outlier.shape = NA) +
labs(title = "Delay Time per Top 10 Airlines",
x = "Unique Carrier",
y = "Delay Time in Minutes") +
ylim(0, 20) +
theme_economist() +
scale_fill_manual(values = c("steelblue1", "steelblue2", "steelblue3", "steelblue4", "lightblue1", "lightblue2","lightblue3", "lightblue4", "cadetblue3", "cadetblue4"),
name = "Airlines",
labels = c("American Airlines","Delta Air Lines", "ExpressJet Airlines","Frontier Airlines", "Envoy Air",
"Spirit Air Lines", "SkyWest Airlines","United Air Lines", "Southwest Airlines", "Mesa Airlines")) +
theme(plot.title = element_text(hjust = 0.5), text = element_text(size = 20))
ggplot(df_top_10_airlines, aes(x = as.factor(OP_UNIQUE_CARRIER), y = DEP_DELAY_NEW, fill = as.factor(OP_UNIQUE_CARRIER))) +
geom_boxplot(outlier.shape = NA) +
labs(title = "Delay Time per Top 10 Airlines",
x = "Unique Carrier",
y = "Delay Time in Minutes") +
ylim(0, 15) +
theme_economist() +
scale_fill_manual(values = c("steelblue1", "steelblue2", "steelblue3", "steelblue4", "lightblue1", "lightblue2","lightblue3", "lightblue4", "cadetblue3", "cadetblue4"),
name = "Airlines",
labels = c("American Airlines","Delta Air Lines", "ExpressJet Airlines","Frontier Airlines", "Envoy Air",
"Spirit Air Lines", "SkyWest Airlines","United Air Lines", "Southwest Airlines", "Mesa Airlines")) +
theme(plot.title = element_text(hjust = 0.5), text = element_text(size = 20))
ggplot(df_top_10_airlines, aes(x = as.factor(OP_UNIQUE_CARRIER), y = DEP_DELAY_NEW, fill = as.factor(OP_UNIQUE_CARRIER))) +
geom_boxplot(outlier.shape = NA) +
labs(title = "Delay Time per Top 10 Airlines",
x = "Unique Carrier",
y = "Delay Time in Minutes") +
ylim(0, 10) +
theme_economist() +
scale_fill_manual(values = c("steelblue1", "steelblue2", "steelblue3", "steelblue4", "lightblue1", "lightblue2","lightblue3", "lightblue4", "cadetblue3", "cadetblue4"),
name = "Airlines",
labels = c("American Airlines","Delta Air Lines", "ExpressJet Airlines","Frontier Airlines", "Envoy Air",
"Spirit Air Lines", "SkyWest Airlines","United Air Lines", "Southwest Airlines", "Mesa Airlines")) +
theme(plot.title = element_text(hjust = 0.5), text = element_text(size = 20))
sort(table(no_zeros_delays$OP_UNIQUE_CARRIER), decreasing = TRUE)
top_10_airlines <- names(sort(table(no_zeros_delays$OP_UNIQUE_CARRIER), decreasing = TRUE)[1:10])
df_top_10_airlines <- no_zeros_delays[which(no_zeros_delays$OP_UNIQUE_CARRIER %in% top_10_airlines), ]
ggplot(df_top_10_airlines, aes(x = as.factor(OP_UNIQUE_CARRIER), y = DEP_DELAY_NEW, fill = as.factor(OP_UNIQUE_CARRIER))) +
geom_boxplot(outlier.shape = NA) +
labs(title = "Delay Time per Top 10 Airlines",
x = "Unique Carrier",
y = "Delay Time in Minutes") +
theme_economist() +
scale_fill_manual(values = c("steelblue1", "steelblue2", "steelblue3", "steelblue4", "lightblue1", "lightblue2","lightblue3", "lightblue4", "cadetblue3", "cadetblue4"),
name = "Airlines",
labels = c("American Airlines","Delta Air Lines", "ExpressJet Airlines","Frontier Airlines", "Envoy Air",
"Spirit Air Lines", "SkyWest Airlines","United Air Lines", "Southwest Airlines", "Mesa Airlines")) +
theme(plot.title = element_text(hjust = 0.5), text = element_text(size = 20))
ggplot(df_top_10_airlines, aes(x = as.factor(OP_UNIQUE_CARRIER), y = DEP_DELAY_NEW, fill = as.factor(OP_UNIQUE_CARRIER))) +
geom_boxplot(outlier.shape = NA) +
labs(title = "Delay Time per Top 10 Airlines",
x = "Unique Carrier",
y = "Delay Time in Minutes") +
ylim(0, 175) +
theme_economist() +
scale_fill_manual(values = c("steelblue1", "steelblue2", "steelblue3", "steelblue4", "lightblue1", "lightblue2","lightblue3", "lightblue4", "cadetblue3", "cadetblue4"),
name = "Airlines",
labels = c("American Airlines","Delta Air Lines", "ExpressJet Airlines","Frontier Airlines", "Envoy Air",
"Spirit Air Lines", "SkyWest Airlines","United Air Lines", "Southwest Airlines", "Mesa Airlines")) +
theme(plot.title = element_text(hjust = 0.5), text = element_text(size = 20))
median(df_top_10_airlines[df_top_10_airlines$OP_UNIQUE_CARRIER = "AA", DEP_DELAY_NEW ])
median(df_top_10_airlines[df_top_10_airlines$OP_UNIQUE_CARRIER == "AA", DEP_DELAY_NEW ])
median(df_top_10_airlines[df_top_10_airlines$OP_UNIQUE_CARRIER == "AA", "DEP_DELAY_NEW"])
median(df_top_10_airlines[df_top_10_airlines$OP_UNIQUE_CARRIER == "DL", "DEP_DELAY_NEW"])
median(df_top_10_airlines[df_top_10_airlines$OP_UNIQUE_CARRIER == "AA", "DEP_DELAY_NEW"])
median(df_top_10_airlines[df_top_10_airlines$OP_UNIQUE_CARRIER == "DL", "DEP_DELAY_NEW"])
median(df_top_10_airlines[df_top_10_airlines$OP_UNIQUE_CARRIER == "EV", "DEP_DELAY_NEW"])
median(df_top_10_airlines[df_top_10_airlines$OP_UNIQUE_CARRIER == "F9", "DEP_DELAY_NEW"])
median(df_top_10_airlines[df_top_10_airlines$OP_UNIQUE_CARRIER == "MQ", "DEP_DELAY_NEW"])
median(df_top_10_airlines[df_top_10_airlines$OP_UNIQUE_CARRIER == "NK", "DEP_DELAY_NEW"])
median(df_top_10_airlines[df_top_10_airlines$OP_UNIQUE_CARRIER == "OO", "DEP_DELAY_NEW"])
median(df_top_10_airlines[df_top_10_airlines$OP_UNIQUE_CARRIER == "UA", "DEP_DELAY_NEW"])
median(df_top_10_airlines[df_top_10_airlines$OP_UNIQUE_CARRIER == "WN", "DEP_DELAY_NEW"])
median(df_top_10_airlines[df_top_10_airlines$OP_UNIQUE_CARRIER == "YN", "DEP_DELAY_NEW"])
median(df_top_10_airlines[df_top_10_airlines$OP_UNIQUE_CARRIER == "YV", "DEP_DELAY_NEW"])
knitr::opts_chunk$set(echo = TRUE)
dgamma(34, shape1 = 256000, rate = 16000)
dgamma(34, shape = 256000, rate = 16000)
dgamma(34, shape = 256000, rate = 16000)
dgamma(340, shape = 256000, rate = 16000)
dgamma(340, shape = 256000, rate = 16000)
dgamma(16.01, shape = 256000, rate = 16000)
1 - pgamma(16.01, shape = 256000, rate = 16000)
1 - pgamma(16.01, shape = 256000, rate = 16000)
dgamma(16.0, shape = 256000, rate = 16000)
1 - pgamma(16.01, shape = 256000, rate = 16000)
rnorm(n = 60, mean = 8.2, sd = 1)
rnorm(n = 60, mean = 8.2, sd = 1)
rnorm(n = 60, mean = 8.2, sd = 1)
rnorm(n = 60, mean = 8.2, sd = 1)
rnorm(n = 60, mean = 8.2, sd = 1)
tablet_user_sample <- rnorm(n = 60, mean = 8.2, sd = 1)
tablet_user_sample
tablet_user_sample <- rnorm(n = 60, mean = 8.2, sd = 1)
mean(tablet_user_sample)
sd(tablet_user_sample)
tablet_users_sample <- rnorm(n = 60, mean = 8.2, sd = 1)
mean(tablet_users_sample)
sd(tablet_users_sample)
tablet_users_sample <- rnorm(n = 60, mean = 8.2, sd = 1)
mean(tablet_users_sample)
sd(tablet_users_sample)
tablet_users_sample <- rnorm(n = 60, mean = 8.2, sd = 1)
mean(tablet_users_sample)
sd(tablet_users_sample)
quantile(tablet_users_sample, probs = 0.9)
sort(tablet_users_sample)
qnorm(,mean = 0, sd = 1)
qnorm(.90,mean = 0, sd = 1)
qnorm(90,mean = 0, sd = 1)
t.test(tablet_users_sample, conf.level = .68)
rgamma(34, shape1= 256000, rate = 16000)
rgamma(34, shape= 256000, rate = 16000)
rgamma(34, shape= 256000, rate = 16000)
rgamma(34, shape= 256000, rate = 16000)
rgamma(34, shape= 256000, rate = 16000)
rgamma(34, shape= 256000, rate = 16000)
qnorm(90,mean = 0, sd = 1)
256000 / (16000)^2
sqrt(256000 / (16000)^2)
sqrt(256000 / (16000)^2) / sqrt(34)
256000 / (16000)
gamma_mean <- 256000 / 16000
gamma_mean
# Mean
gamma_mean <- 256000 / 16000
gamma_variance <- 256000 / 16000^2
gamma_variance
# Mean
gamma_mean <- 256000 / 16000
gamma_variance <- 256000 / 16000^2
1 -pnorm(16.01, mean = 256000 / 16000, sd = (sqrt(256000 / 16000^2)) / sqrt(34)))
# Mean
gamma_mean <- 256000 / 16000
gamma_variance <- 256000 / 16000^2
1 - pnorm(16.01, mean = (256000 / 16000), sd = (sqrt(256000 / 16000^2)) / sqrt(34)))
# Mean
gamma_mean <- 256000 / 16000
gamma_variance <- 256000 / 16000^2
1 - pnorm(16.01, mean = (256000 / 16000), sd = (sqrt(256000 / 16000^2) / sqrt(34)))
# Mean
gamma_mean <- 256000 / 16000
gamma_variance <- 256000 / 16000^2
round(1 - pnorm(16.01, mean = (256000 / 16000), sd = (sqrt(256000 / 16000^2) / sqrt(34))), digits = 4)
tablet_users_sample <- rnorm(n = 60, mean = 8.2, sd = 1)
round(mean(tablet_users_sample), digits = 4)
round(sd(tablet_users_sample), digits = 4)
#tablet_users_sample <- rnorm(n = 60, mean = 8.2, sd = 1)
#round(mean(tablet_users_sample), digits = 4)
#round(sd(tablet_users_sample), digits = 4)
8.2
#tablet_users_sample <- rnorm(n = 60, mean = 8.2, sd = 1)
#round(mean(tablet_users_sample), digits = 4)
#round(sd(tablet_users_sample), digits = 4)
8.2 # normal mean
8.2 / sqrt(60) # sample standard deviation
#tablet_users_sample <- rnorm(n = 60, mean = 8.2, sd = 1)
#round(mean(tablet_users_sample), digits = 4)
#round(sd(tablet_users_sample), digits = 4)
normal_mean <- 8.2 # normal mean
normal_mean
sample_std <- 8.2 / sqrt(60) # sample standard deviation
sample_std
qnorm(n = 0.90, mean = normal_mean, sd = sample_std)
qnorm(p = 0.90, mean = normal_mean, sd = sample_std)
round(qnorm(p = 0.90, mean = normal_mean, sd = sample_std), digits = 4)
#tablet_users_sample <- rnorm(n = 60, mean = 8.2, sd = 1)
#round(mean(tablet_users_sample), digits = 4)
#round(sd(tablet_users_sample), digits = 4)
round(normal_mean <- 8.2, digits = 4) # normal mean
normal_mean
sample_std <- 8.2 / sqrt(60) # sample standard deviation
sample_std
#tablet_users_sample <- rnorm(n = 60, mean = 8.2, sd = 1)
#round(mean(tablet_users_sample), digits = 4)
#round(sd(tablet_users_sample), digits = 4)
normal_mean <- round(8.2, digits = 4) # normal mean
normal_mean
dsample_std <- round(8.2 / sqrt(60) # sample standard deviation
sample_std
#tablet_users_sample <- rnorm(n = 60, mean = 8.2, sd = 1)
#round(mean(tablet_users_sample), digits = 4)
#round(sd(tablet_users_sample), digits = 4)
normal_mean <- round(8.2, digits = 4) # normal mean
normal_mean
sample_std <- round(8.2 / sqrt(60) # sample standard deviation
sample_std
#tablet_users_sample <- rnorm(n = 60, mean = 8.2, sd = 1)
#round(mean(tablet_users_sample), digits = 4)
#round(sd(tablet_users_sample), digits = 4)
normal_mean <- round(8.2, digits = 4) # normal mean
normal_mean
sample_std <- round(8.2 / sqrt(60)) # sample standard deviation
sample_std
#tablet_users_sample <- rnorm(n = 60, mean = 8.2, sd = 1)
#round(mean(tablet_users_sample), digits = 4)
#round(sd(tablet_users_sample), digits = 4)
normal_mean <- round(8.2, digits = 4) # normal mean
normal_mean
sample_std <- round(8.2 / sqrt(60), digits = 4) # sample standard deviation
sample_std
round(qnorm(p = 0.90, mean = normal_mean, sd = sample_std), digits = 4)
#tablet_users_sample <- rnorm(n = 60, mean = 8.2, sd = 1)
#round(mean(tablet_users_sample), digits = 4)
#round(sd(tablet_users_sample), digits = 4)
normal_mean <- round(8.2, digits = 4) # normal mean
normal_mean
sample_std <- round( 1 / sqrt(60), digits = 4) # sample standard deviation
sample_std
round(qnorm(p = 0.90, mean = normal_mean, sd = sample_std), digits = 4)
#tablet_users_sample <- rnorm(n = 60, mean = 8.2, sd = 1)
#round(mean(tablet_users_sample), digits = 4)
#round(sd(tablet_users_sample), digits = 4)
normal_mean <- round(8.2, digits = 4) # normal mean
normal_mean
sample_std <- round( 1 / sqrt(60), digits = 4) # sample standard deviation
sample_std
round(qnorm(p = 0.90, mean = normal_mean, sd = sample_std), digits = 4)
#tablet_users_sample <- rnorm(n = 60, mean = 8.2, sd = 1)
#round(mean(tablet_users_sample), digits = 4)
#round(sd(tablet_users_sample), digits = 4)
round(normal_mean <- 8.2, digits = 4) # normal mean
normal_mean
sample_std <- round( 1 / sqrt(60), digits = 4) # sample standard deviation
sample_std
#tablet_users_sample <- rnorm(n = 60, mean = 8.2, sd = 1)
#round(mean(tablet_users_sample), digits = 4)
#round(sd(tablet_users_sample), digits = 4)
round(normal_mean <- 8.2, digits = 4) # normal mean
normal_mean
round(sample_std <- 1 / sqrt(60), digits = 4) # sample standard deviation
sample_std
round(qnorm(p = 0.90, mean = normal_mean, sd = sample_std), digits = 4)
round(qnorm(p = 0.90, mean = normal_mean, sd = sample_std), digits = 4)
#tablet_users_sample <- rnorm(n = 60, mean = 8.2, sd = 1)
#round(mean(tablet_users_sample), digits = 4)
#round(sd(tablet_users_sample), digits = 4)
round(normal_mean <- 8.2, digits = 4) # normal mean
round(sample_std <- 1 / sqrt(60), digits = 4) # sample standard deviation
round(qnorm(p = 0.90, mean = normal_mean, sd = sample_std), digits = 4)
round(qnorm(p = 0.90, mean = normal_mean, sd = sample_std), digits = 4)
pnorm(normal_mean + sample_std, mean = normal_mean, sd = sample_std)
pnorm(normal_mean + sample_std, mean = normal_mean, sd = sample_std) - pnorm(normal_mean - sample_std, mean = normal_mean, sd = sample_std)
round(pnorm(normal_mean + sample_std,
mean = normal_mean, sd = sample_std) -
pnorm(normal_mean - sample_std,
mean = normal_mean, sd = sample_std), digits = 4)
round(pnorm(normal_mean + 1 * sample_std,
mean = normal_mean, sd = sample_std) -
pnorm(normal_mean - 1 * sample_std,
mean = normal_mean, sd = sample_std), digits = 4)
round(pnorm(normal_mean + 1 * sample_std,
mean = normal_mean, sd = sample_std) -
pnorm(normal_mean - 1 * sample_std,
mean = normal_mean, sd = sample_std), digits = 4)
round(pnorm(normal_mean + 2 * sample_std,
mean = normal_mean, sd = sample_std) -
pnorm(normal_mean - 2 * sample_std,
mean = normal_mean, sd = sample_std), digits = 4)
round(pnorm(normal_mean + 3 * sample_std,
mean = normal_mean, sd = sample_std) -
pnorm(normal_mean - 3 * sample_std,
mean = normal_mean, sd = sample_std), digits = 4)
round(binomial_mean <- 5 * 0.5, digits = 4)
#tablet_users_sample <- rnorm(n = 60, mean = 8.2, sd = 1)
#round(mean(tablet_users_sample), digits = 4)
#round(sd(tablet_users_sample), digits = 4)
round(normal_mean <- 8.2, digits = 4) # normal mean
round(sample_normal_std <- 1 / sqrt(60), digits = 4) # sample standard deviation
round(qnorm(p = 0.90, mean = normal_mean, sd = sample_normal_std), digits = 4)
#tablet_users_sample <- rnorm(n = 60, mean = 8.2, sd = 1)
#round(mean(tablet_users_sample), digits = 4)
#round(sd(tablet_users_sample), digits = 4)
round(normal_mean <- 8.2, digits = 4) # normal mean
round(normal_std <- 1 / sqrt(60), digits = 4) # sample standard deviation
round(qnorm(p = 0.90, mean = normal_mean, sd = normal_std), digits = 4)
round(binomial_mean <- 5 * 0.5, digits = 4)
round(binomial_std <- 5 * 0.5 * 0.5, digits = 4)
binomial_mean <- round(5 * 0.5, digits = 4)
binomial_std <- round(5 * 0.5 * 0.5, digits = 4)
binomial_mean <- round(5 * 0.5, digits = 4)
binomial_std <- round(5 * 0.5 * 0.5, digits = 4)
binomial_std
binomial_mean <- round(5 * 0.5, digits = 4)
binomial_std <- round(5 * 0.5 * 0.5, digits = 4)
pnorm(2.25, mean = binomial_mean , sd = binomial_std)
binomial_mean <- round(5 * 0.5, digits = 4)
binomial_std <- round(sqrt(5 * 0.5 * 0.5) / sqrt(75), digits = 4)
pnorm(2.25, mean = binomial_mean , sd = binomial_std)
binomial_mean <- round(5 * 0.5, digits = 4)
binomial_std <- round(sqrt(5 * 0.5 * 0.5) / sqrt(75), digits = 4)
round(pnorm(2.25, mean = binomial_mean , sd = binomial_std), digits = 4)
round(qnorm(0.90, mean = binomial_mean , sd = binomial_std), digits = 4)
round(pnorm(200, mean = binomial_mean , sd = binomial_std), digits = 4)
round(pnorm(200/75, mean = binomial_mean , sd = binomial_std), digits = 4)
round(75 * pnorm(200, mean = binomial_mean , sd = binomial_std), digits = 4)
round(75 * qnorm(0.90, mean = binomial_mean , sd = binomial_std), digits = 4)
expo_mean <- 2
lamda <- 1 / expo_mean
lambda
lamda
expo_mean <- 2
lambda <- 1 / expo_mean
expo_mean <- 2
lambda <- 1 / expo_mean
expo_mean <- reound(sqrt(1 / expo_mean) / sqrt(80), digits = 4)
expo_mean <- 2
lambda <- 1 / expo_mean
expo_mean <- round(sqrt(1 / expo_mean) / sqrt(80), digits = 4)
expo_mean <- 2
lambda <- 1 / expo_mean
expo_std <- round(sqrt(1 / expo_mean) / sqrt(80), digits = 4)
expo_std
expo_mean <- 2
lambda <- 1 / expo_mean
expo_std <- round(sqrt(1 / (expo_mean)^2) / sqrt(80), digits = 4)
expo_std
sqrt(1 / (expo_mean)^2
sqrt(1 / (expo_mean)^2
sqrt(1 / (expo_mean)^2
sqrt(1 / (expo_mean)^2
sqrt(1 / (expo_mean)^2)
expo_mean <- 2
lambda <- 1 / expo_mean
expo_std <- round(sqrt(1 / (expo_mean)^2) / sqrt(80), digits = 4)
expo_mean <- 2
lambda <- 1 / expo_mean
expo_std <- round(sqrt(1 / (lambda)^2) / sqrt(80), digits = 4)
expo_std
expo_mean <- 2
lambda <- 1 / expo_mean
expo_std <- round(sqrt(1 / (lambda)^2) / sqrt(80), digits = 4)
1 - pnorm(2.5, mean = expo_mean, sd = expo_std)
expo_mean <- 2
lambda <- 1 / expo_mean
expo_std <- round(sqrt(1 / (lambda)^2) / sqrt(80), digits = 4)
round(1 - pnorm(2.5, mean = expo_mean, sd = expo_std), digits = 4)
exp_mean <- 2
lambda <- 1 / expo_mean
exp_std <- round(sqrt(1 / (lambda)^2) / sqrt(80), digits = 4)
dexp
round(1 - pnorm(2.5, mean = expo_mean, sd = expo_std), digits = 4)
exp_mean <- 2
lambda <- 1 / expo_mean
exp_std <- round(sqrt(1 / (lambda)^2) / sqrt(80), digits = 4)
round(1 - pnorm(2.5, mean = exp_mean, sd = exp_std), digits = 4)
exp_mean <- 2
lambda <- 1 / expo_mean
exp_std <- round(sqrt(1 / (lambda)^2) / sqrt(80), digits = 4)
1 - pexp(2,5 , rate = lambda)
lambda
exp_mean <- 2
lambda <- 1 / expo_mean
exp_std <- round(sqrt(1 / (lambda)^2) / sqrt(80), digits = 4)
1 - pexp(2.5 , rate = lambda)
exp_mean <- 2
lambda <- 1 / expo_mean
exp_std <- round(sqrt(1 / (lambda)^2) / sqrt(80), digits = 4)
round(1 - pexp(2.5 , rate = lambda), digits = 4)
: prop.test(22, 30)
prop.test(22, 30)
qnorm(1 - 0.05/2, mean = 22/30, sd = 1)
qnorm(1 - 0.05/2, mean = 0, sd = 1)
s <- (22/30) * (18*30) * 30 * (1/sqrt(30)))
s <- (22/30) * (18*30) * 30 * (1/sqrt(30))
qnorm(1 - 0.05/2, mean = 22/30, sd = s)
s
s <- (22/30) * (18/30) * 30 * (1/sqrt(30))
qnorm(1 - 0.05/2, mean = 22/30, sd = s)
binom.test(22, 30)$conf.int
prop.test(22, 30)
# Probability that sample mean is between +/- 1 standard deviation
round(pnorm(normal_mean + 1 * sample_std,
mean = normal_mean, sd = sample_std) -
pnorm(normal_mean - 1 * sample_std,
mean = normal_mean, sd = sample_std), digits = 4)
# Probability that sample mean is between +/- 2 standard deviation
round(pnorm(normal_mean + 2 * sample_std,
mean = normal_mean, sd = sample_std) -
pnorm(normal_mean - 2 * sample_std,
mean = normal_mean, sd = sample_std), digits = 4)
# Probability that sample mean is between +/- 3 standard deviation
round(pnorm(normal_mean + 3 * sample_std,
mean = normal_mean, sd = sample_std) -
pnorm(normal_mean - 3 * sample_std,
mean = normal_mean, sd = sample_std), digits = 4)
# Probability that sample mean is between +/- 1 standard deviation
round(pnorm(normal_mean + 1 * sample_std,
mean = normal_mean, sd = sample_std) -
pnorm(normal_mean - 1 * sample_std,
mean = normal_mean, sd = sample_std), digits = 4)
# Probability that sample mean is between +/- 2 standard deviation
round(pnorm(normal_mean + 2 * sample_std,
mean = normal_mean, sd = sample_std) -
pnorm(normal_mean - 2 * sample_std,
mean = normal_mean, sd = sample_std), digits = 4)
# Probability that sample mean is between +/- 3 standard deviation
round(pnorm(normal_mean + 3 * sample_std,
mean = normal_mean, sd = sample_std) -
pnorm(normal_mean - 3 * sample_std,
mean = normal_mean, sd = sample_std), digits = 4)
prop.test(22,30)
# 95% confidence Interval
round(prop.test(22,30), digits = 4)
# 95% confidence Interval
prop.test(22,30)
# 95% confidence Interval
x <- prop.test(22,30)
# 95% confidence Interval
x <- prop.test(22,30)
x
# 95% confidence Interval
x <- prop.test(22,30)$conf.int[1:2]
x
# 95% confidence Interval
x <- prop.test(22,30)
x
# 95% confidence Interval
x <- prop.test(22,30)$conf.int[1:2]
x
# 95% confidence Interval
round(prop.test(22,30)$conf.int[1:2], digits = 4)
